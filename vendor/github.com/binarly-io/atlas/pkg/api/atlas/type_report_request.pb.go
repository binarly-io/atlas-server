// Code generated by protoc-gen-go. DO NOT EDIT.
// source: type_report_request.proto

package atlas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReportRequestType int32

const (
	ReportRequestType_REPORT_REQUEST_TYPE_RESERVED    ReportRequestType = 0
	ReportRequestType_REPORT_REQUEST_TYPE_UNSPECIFIED ReportRequestType = 100
)

var ReportRequestType_name = map[int32]string{
	0:   "REPORT_REQUEST_TYPE_RESERVED",
	100: "REPORT_REQUEST_TYPE_UNSPECIFIED",
}

var ReportRequestType_value = map[string]int32{
	"REPORT_REQUEST_TYPE_RESERVED":    0,
	"REPORT_REQUEST_TYPE_UNSPECIFIED": 100,
}

func (x ReportRequestType) String() string {
	return proto.EnumName(ReportRequestType_name, int32(x))
}

func (ReportRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bd3149180e4055d2, []int{0}
}

type ReportRequest struct {
	// Types that are valid to be assigned to TypeOptional:
	//	*ReportRequest_Type
	TypeOptional isReportRequest_TypeOptional `protobuf_oneof:"type_optional"`
	// Types that are valid to be assigned to TimestampOptional:
	//	*ReportRequest_Ts
	TimestampOptional isReportRequest_TimestampOptional `protobuf_oneof:"timestamp_optional"`
	// Types that are valid to be assigned to DescriptionOptional:
	//	*ReportRequest_Description
	DescriptionOptional  isReportRequest_DescriptionOptional `protobuf_oneof:"description_optional"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ReportRequest) Reset()         { *m = ReportRequest{} }
func (m *ReportRequest) String() string { return proto.CompactTextString(m) }
func (*ReportRequest) ProtoMessage()    {}
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd3149180e4055d2, []int{0}
}

func (m *ReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRequest.Unmarshal(m, b)
}
func (m *ReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRequest.Marshal(b, m, deterministic)
}
func (m *ReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRequest.Merge(m, src)
}
func (m *ReportRequest) XXX_Size() int {
	return xxx_messageInfo_ReportRequest.Size(m)
}
func (m *ReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRequest proto.InternalMessageInfo

type isReportRequest_TypeOptional interface {
	isReportRequest_TypeOptional()
}

type ReportRequest_Type struct {
	Type ReportRequestType `protobuf:"varint,100,opt,name=type,proto3,enum=atlas.ReportRequestType,oneof"`
}

func (*ReportRequest_Type) isReportRequest_TypeOptional() {}

func (m *ReportRequest) GetTypeOptional() isReportRequest_TypeOptional {
	if m != nil {
		return m.TypeOptional
	}
	return nil
}

func (m *ReportRequest) GetType() ReportRequestType {
	if x, ok := m.GetTypeOptional().(*ReportRequest_Type); ok {
		return x.Type
	}
	return ReportRequestType_REPORT_REQUEST_TYPE_RESERVED
}

type isReportRequest_TimestampOptional interface {
	isReportRequest_TimestampOptional()
}

type ReportRequest_Ts struct {
	Ts *timestamp.Timestamp `protobuf:"bytes,200,opt,name=ts,proto3,oneof"`
}

func (*ReportRequest_Ts) isReportRequest_TimestampOptional() {}

func (m *ReportRequest) GetTimestampOptional() isReportRequest_TimestampOptional {
	if m != nil {
		return m.TimestampOptional
	}
	return nil
}

func (m *ReportRequest) GetTs() *timestamp.Timestamp {
	if x, ok := m.GetTimestampOptional().(*ReportRequest_Ts); ok {
		return x.Ts
	}
	return nil
}

type isReportRequest_DescriptionOptional interface {
	isReportRequest_DescriptionOptional()
}

type ReportRequest_Description struct {
	Description string `protobuf:"bytes,300,opt,name=description,proto3,oneof"`
}

func (*ReportRequest_Description) isReportRequest_DescriptionOptional() {}

func (m *ReportRequest) GetDescriptionOptional() isReportRequest_DescriptionOptional {
	if m != nil {
		return m.DescriptionOptional
	}
	return nil
}

func (m *ReportRequest) GetDescription() string {
	if x, ok := m.GetDescriptionOptional().(*ReportRequest_Description); ok {
		return x.Description
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReportRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReportRequest_Type)(nil),
		(*ReportRequest_Ts)(nil),
		(*ReportRequest_Description)(nil),
	}
}

func init() {
	proto.RegisterEnum("atlas.ReportRequestType", ReportRequestType_name, ReportRequestType_value)
	proto.RegisterType((*ReportRequest)(nil), "atlas.ReportRequest")
}

func init() { proto.RegisterFile("type_report_request.proto", fileDescriptor_bd3149180e4055d2) }

var fileDescriptor_bd3149180e4055d2 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xbb, 0x41, 0x05, 0xa7, 0x54, 0xeb, 0x52, 0x24, 0x16, 0xa1, 0xc1, 0x5e, 0x82, 0xe0,
	0x16, 0xea, 0x1b, 0xd4, 0xae, 0xa4, 0x17, 0x8d, 0x9b, 0x54, 0xd0, 0x4b, 0x48, 0xcd, 0x5a, 0x02,
	0xa9, 0xbb, 0xee, 0x4e, 0x0f, 0x7d, 0x27, 0x1f, 0xc4, 0xb3, 0x4f, 0x24, 0x6e, 0x68, 0xad, 0xd8,
	0xe3, 0x7c, 0x7c, 0xf3, 0xff, 0x33, 0x70, 0x86, 0x2b, 0x2d, 0x33, 0x23, 0xb5, 0x32, 0x98, 0x19,
	0xf9, 0xbe, 0x94, 0x16, 0x99, 0x36, 0x0a, 0x15, 0xdd, 0xcf, 0xb1, 0xca, 0x6d, 0xb7, 0x37, 0x57,
	0x6a, 0x5e, 0xc9, 0x81, 0x83, 0xb3, 0xe5, 0xeb, 0x00, 0xcb, 0x85, 0xb4, 0x98, 0x2f, 0x74, 0xed,
	0x5d, 0x7c, 0x11, 0x68, 0x09, 0x17, 0x20, 0xea, 0x7d, 0xca, 0x60, 0xef, 0x27, 0xd6, 0x2f, 0x02,
	0x12, 0x1e, 0x0d, 0x7d, 0xe6, 0x82, 0xd8, 0x1f, 0x27, 0x5d, 0x69, 0x19, 0x35, 0x84, 0xf3, 0xe8,
	0x15, 0x78, 0x68, 0xfd, 0x4f, 0x12, 0x90, 0xb0, 0x39, 0xec, 0xb2, 0xba, 0x90, 0xad, 0x0b, 0x59,
	0xba, 0x2e, 0x8c, 0x88, 0xf0, 0xd0, 0xd2, 0x3e, 0x34, 0x0b, 0x69, 0x5f, 0x4c, 0xa9, 0xb1, 0x54,
	0x6f, 0xfe, 0x87, 0x17, 0x90, 0xf0, 0x30, 0xf2, 0xc4, 0x36, 0x1d, 0x1d, 0x43, 0xcb, 0xbd, 0xa6,
	0xdc, 0x98, 0x57, 0xa3, 0x0e, 0xd0, 0xcd, 0xe5, 0xbf, 0xf4, 0x14, 0x3a, 0x5b, 0x5b, 0x1b, 0x7e,
	0xf9, 0x0c, 0x27, 0xff, 0xee, 0xa5, 0x01, 0x9c, 0x0b, 0x1e, 0xdf, 0x8b, 0x34, 0x13, 0xfc, 0x61,
	0xca, 0x93, 0x34, 0x4b, 0x9f, 0x62, 0x9e, 0x09, 0x9e, 0x70, 0xf1, 0xc8, 0xc7, 0xed, 0x06, 0xed,
	0x43, 0x6f, 0x97, 0x31, 0xbd, 0x4b, 0x62, 0x7e, 0x33, 0xb9, 0x9d, 0xf0, 0x71, 0xbb, 0x98, 0x1d,
	0xb8, 0xcf, 0xae, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xc8, 0xd7, 0x82, 0x7c, 0x01, 0x00,
	0x00,
}
