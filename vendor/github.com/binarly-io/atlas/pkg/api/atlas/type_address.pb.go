// Code generated by protoc-gen-go. DO NOT EDIT.
// source: type_address.proto

package atlas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// AddressType represents all types of domain-specific addresses in the system
type AddressType int32

const (
	// Due to first enum value has to be zero in proto3
	AddressType_ADDRESS_RESERVED AddressType = 0
	// S3 and MinIO address
	AddressType_ADDRESS_S3 AddressType = 100
	// Kafka address
	AddressType_ADDRESS_KAFKA AddressType = 200
)

var AddressType_name = map[int32]string{
	0:   "ADDRESS_RESERVED",
	100: "ADDRESS_S3",
	200: "ADDRESS_KAFKA",
}

var AddressType_value = map[string]int32{
	"ADDRESS_RESERVED": 0,
	"ADDRESS_S3":       100,
	"ADDRESS_KAFKA":    200,
}

func (x AddressType) String() string {
	return proto.EnumName(AddressType_name, int32(x))
}

func (AddressType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e23d849b49ebc127, []int{0}
}

// Address describes general address
type Address struct {
	// Types that are valid to be assigned to TypeOptional:
	//	*Address_Type
	TypeOptional isAddress_TypeOptional `protobuf_oneof:"type_optional"`
	// Types that are valid to be assigned to Address:
	//	*Address_S3
	//	*Address_Kafka
	Address              isAddress_Address `protobuf_oneof:"address"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_e23d849b49ebc127, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

type isAddress_TypeOptional interface {
	isAddress_TypeOptional()
}

type Address_Type struct {
	Type AddressType `protobuf:"varint,100,opt,name=type,proto3,enum=atlas.AddressType,oneof"`
}

func (*Address_Type) isAddress_TypeOptional() {}

func (m *Address) GetTypeOptional() isAddress_TypeOptional {
	if m != nil {
		return m.TypeOptional
	}
	return nil
}

func (m *Address) GetType() AddressType {
	if x, ok := m.GetTypeOptional().(*Address_Type); ok {
		return x.Type
	}
	return AddressType_ADDRESS_RESERVED
}

type isAddress_Address interface {
	isAddress_Address()
}

type Address_S3 struct {
	S3 *S3Address `protobuf:"bytes,200,opt,name=s3,proto3,oneof"`
}

type Address_Kafka struct {
	Kafka *KafkaAddress `protobuf:"bytes,300,opt,name=kafka,proto3,oneof"`
}

func (*Address_S3) isAddress_Address() {}

func (*Address_Kafka) isAddress_Address() {}

func (m *Address) GetAddress() isAddress_Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Address) GetS3() *S3Address {
	if x, ok := m.GetAddress().(*Address_S3); ok {
		return x.S3
	}
	return nil
}

func (m *Address) GetKafka() *KafkaAddress {
	if x, ok := m.GetAddress().(*Address_Kafka); ok {
		return x.Kafka
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Address) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Address_Type)(nil),
		(*Address_S3)(nil),
		(*Address_Kafka)(nil),
	}
}

func init() {
	proto.RegisterEnum("atlas.AddressType", AddressType_name, AddressType_value)
	proto.RegisterType((*Address)(nil), "atlas.Address")
}

func init() { proto.RegisterFile("type_address.proto", fileDescriptor_e23d849b49ebc127) }

var fileDescriptor_e23d849b49ebc127 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0xa9, 0x2c, 0x48,
	0x8d, 0x4f, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x4d, 0x2c, 0xc9, 0x49, 0x2c, 0x96, 0x12, 0x05, 0x4b, 0x15, 0x1b, 0xa3, 0xca, 0x4a, 0x49, 0x80,
	0x85, 0xb3, 0x13, 0xd3, 0xb2, 0x13, 0x51, 0x65, 0x94, 0x16, 0x31, 0x72, 0xb1, 0x3b, 0x42, 0x44,
	0x84, 0x34, 0xb8, 0x58, 0x40, 0xea, 0x24, 0x52, 0x14, 0x18, 0x35, 0xf8, 0x8c, 0x84, 0xf4, 0xc0,
	0x46, 0xea, 0x41, 0x65, 0x43, 0x2a, 0x0b, 0x52, 0x3d, 0x18, 0x82, 0xc0, 0x2a, 0x84, 0x94, 0xb9,
	0x98, 0x8a, 0x8d, 0x25, 0x4e, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x09, 0x40, 0x15, 0x06, 0x1b,
	0x43, 0x95, 0x7a, 0x30, 0x06, 0x31, 0x15, 0x1b, 0x0b, 0xe9, 0x70, 0xb1, 0x82, 0x6d, 0x94, 0x58,
	0xc3, 0x04, 0x56, 0x27, 0x0c, 0x55, 0xe7, 0x0d, 0x12, 0x44, 0x28, 0x85, 0x28, 0x72, 0xe2, 0xe7,
	0xe2, 0x05, 0x3b, 0x32, 0xbf, 0xa0, 0x24, 0x33, 0x3f, 0x2f, 0x31, 0xc7, 0x89, 0x93, 0x8b, 0x1d,
	0xea, 0x54, 0x2d, 0x77, 0x2e, 0x6e, 0x24, 0x57, 0x08, 0x89, 0x70, 0x09, 0x38, 0xba, 0xb8, 0x04,
	0xb9, 0x06, 0x07, 0xc7, 0x07, 0xb9, 0x06, 0xbb, 0x06, 0x85, 0xb9, 0xba, 0x08, 0x30, 0x08, 0xf1,
	0x71, 0x71, 0xc1, 0x44, 0x83, 0x8d, 0x05, 0x52, 0x84, 0x84, 0xb8, 0x78, 0x61, 0x7c, 0x6f, 0x47,
	0x37, 0x6f, 0x47, 0x81, 0x13, 0x8c, 0x49, 0x6c, 0x60, 0x4f, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x93, 0x92, 0xb4, 0x32, 0x42, 0x01, 0x00, 0x00,
}
