// Code generated by protoc-gen-go. DO NOT EDIT.
// source: type_report_reply.proto

package atlas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReportReplyType int32

const (
	ReportReplyType_REPORT_REPLY_TYPE_RESERVED    ReportReplyType = 0
	ReportReplyType_REPORT_REPLY_TYPE_UNSPECIFIED ReportReplyType = 100
)

var ReportReplyType_name = map[int32]string{
	0:   "REPORT_REPLY_TYPE_RESERVED",
	100: "REPORT_REPLY_TYPE_UNSPECIFIED",
}

var ReportReplyType_value = map[string]int32{
	"REPORT_REPLY_TYPE_RESERVED":    0,
	"REPORT_REPLY_TYPE_UNSPECIFIED": 100,
}

func (x ReportReplyType) String() string {
	return proto.EnumName(ReportReplyType_name, int32(x))
}

func (ReportReplyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1cc6247b54b5cf0c, []int{0}
}

type ReportReply struct {
	// Types that are valid to be assigned to TypeOptional:
	//	*ReportReply_Type
	TypeOptional isReportReply_TypeOptional `protobuf_oneof:"type_optional"`
	// Types that are valid to be assigned to TimestampOptional:
	//	*ReportReply_Ts
	TimestampOptional isReportReply_TimestampOptional `protobuf_oneof:"timestamp_optional"`
	// Types that are valid to be assigned to DescriptionOptional:
	//	*ReportReply_Description
	DescriptionOptional  isReportReply_DescriptionOptional `protobuf_oneof:"description_optional"`
	Reports              []*Report                         `protobuf:"bytes,700,rep,name=reports,proto3" json:"reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ReportReply) Reset()         { *m = ReportReply{} }
func (m *ReportReply) String() string { return proto.CompactTextString(m) }
func (*ReportReply) ProtoMessage()    {}
func (*ReportReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc6247b54b5cf0c, []int{0}
}

func (m *ReportReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportReply.Unmarshal(m, b)
}
func (m *ReportReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportReply.Marshal(b, m, deterministic)
}
func (m *ReportReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportReply.Merge(m, src)
}
func (m *ReportReply) XXX_Size() int {
	return xxx_messageInfo_ReportReply.Size(m)
}
func (m *ReportReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReportReply proto.InternalMessageInfo

type isReportReply_TypeOptional interface {
	isReportReply_TypeOptional()
}

type ReportReply_Type struct {
	Type ReportReplyType `protobuf:"varint,100,opt,name=type,proto3,enum=atlas.ReportReplyType,oneof"`
}

func (*ReportReply_Type) isReportReply_TypeOptional() {}

func (m *ReportReply) GetTypeOptional() isReportReply_TypeOptional {
	if m != nil {
		return m.TypeOptional
	}
	return nil
}

func (m *ReportReply) GetType() ReportReplyType {
	if x, ok := m.GetTypeOptional().(*ReportReply_Type); ok {
		return x.Type
	}
	return ReportReplyType_REPORT_REPLY_TYPE_RESERVED
}

type isReportReply_TimestampOptional interface {
	isReportReply_TimestampOptional()
}

type ReportReply_Ts struct {
	Ts *timestamp.Timestamp `protobuf:"bytes,200,opt,name=ts,proto3,oneof"`
}

func (*ReportReply_Ts) isReportReply_TimestampOptional() {}

func (m *ReportReply) GetTimestampOptional() isReportReply_TimestampOptional {
	if m != nil {
		return m.TimestampOptional
	}
	return nil
}

func (m *ReportReply) GetTs() *timestamp.Timestamp {
	if x, ok := m.GetTimestampOptional().(*ReportReply_Ts); ok {
		return x.Ts
	}
	return nil
}

type isReportReply_DescriptionOptional interface {
	isReportReply_DescriptionOptional()
}

type ReportReply_Description struct {
	Description string `protobuf:"bytes,300,opt,name=description,proto3,oneof"`
}

func (*ReportReply_Description) isReportReply_DescriptionOptional() {}

func (m *ReportReply) GetDescriptionOptional() isReportReply_DescriptionOptional {
	if m != nil {
		return m.DescriptionOptional
	}
	return nil
}

func (m *ReportReply) GetDescription() string {
	if x, ok := m.GetDescriptionOptional().(*ReportReply_Description); ok {
		return x.Description
	}
	return ""
}

func (m *ReportReply) GetReports() []*Report {
	if m != nil {
		return m.Reports
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReportReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReportReply_Type)(nil),
		(*ReportReply_Ts)(nil),
		(*ReportReply_Description)(nil),
	}
}

func init() {
	proto.RegisterEnum("atlas.ReportReplyType", ReportReplyType_name, ReportReplyType_value)
	proto.RegisterType((*ReportReply)(nil), "atlas.ReportReply")
}

func init() { proto.RegisterFile("type_report_reply.proto", fileDescriptor_1cc6247b54b5cf0c) }

var fileDescriptor_1cc6247b54b5cf0c = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x97, 0xea, 0x14, 0x4f, 0x99, 0x9b, 0x61, 0xcc, 0x52, 0x50, 0xab, 0xde, 0x14, 0xd1,
	0x0c, 0xe6, 0x1b, 0xcc, 0x45, 0x36, 0x10, 0x2d, 0x59, 0x15, 0x76, 0x55, 0x3a, 0x1b, 0x47, 0xa1,
	0x33, 0xa1, 0x89, 0x17, 0x7d, 0x27, 0x1f, 0xc1, 0x07, 0xf0, 0x91, 0xbc, 0x94, 0xa6, 0x74, 0x56,
	0xbd, 0x0a, 0xfc, 0xce, 0x97, 0xef, 0x0f, 0x1c, 0xea, 0x42, 0xf2, 0x28, 0xe7, 0x52, 0xe4, 0xba,
	0x7c, 0xb2, 0x82, 0xc8, 0x5c, 0x68, 0x81, 0xdb, 0xb1, 0xce, 0x62, 0xe5, 0x9e, 0xac, 0x84, 0x58,
	0x65, 0x7c, 0x68, 0xe0, 0xf2, 0xed, 0x65, 0xa8, 0xd3, 0x35, 0x57, 0x3a, 0x5e, 0xcb, 0x4a, 0xe7,
	0x1e, 0x34, 0x0c, 0x2a, 0x74, 0xf6, 0x85, 0xc0, 0x66, 0x06, 0xb0, 0xd2, 0x10, 0x5f, 0xc2, 0x76,
	0x29, 0x72, 0x12, 0x0f, 0xf9, 0xfb, 0xa3, 0x01, 0x31, 0xce, 0xa4, 0xa1, 0x08, 0x0b, 0xc9, 0xa7,
	0x2d, 0x66, 0x54, 0xf8, 0x0a, 0x2c, 0xad, 0x9c, 0x4f, 0xe4, 0x21, 0xdf, 0x1e, 0xb9, 0xa4, 0xca,
	0x27, 0x75, 0x3e, 0x09, 0xeb, 0xfc, 0x29, 0x62, 0x96, 0x56, 0xf8, 0x1c, 0xec, 0x84, 0xab, 0xe7,
	0x3c, 0x95, 0x3a, 0x15, 0xaf, 0xce, 0xbb, 0xe5, 0x21, 0x7f, 0x6f, 0x6a, 0xb1, 0x26, 0xc5, 0x3e,
	0xec, 0x56, 0x0d, 0x95, 0xf3, 0xd1, 0xf6, 0xb6, 0x7c, 0x7b, 0xd4, 0xf9, 0xdd, 0xa2, 0x3e, 0x8f,
	0xbb, 0xd0, 0x31, 0x83, 0x84, 0xf9, 0x18, 0x67, 0xe3, 0x3e, 0xe0, 0xcd, 0xe4, 0x1f, 0x3a, 0x80,
	0x7e, 0xc3, 0x7f, 0xc3, 0x2f, 0x42, 0xe8, 0xfe, 0xd9, 0x85, 0x8f, 0xc1, 0x65, 0x34, 0x78, 0x60,
	0x61, 0xc4, 0x68, 0x70, 0xb7, 0x88, 0xc2, 0x45, 0x40, 0x23, 0x46, 0xe7, 0x94, 0x3d, 0xd1, 0x49,
	0xaf, 0x85, 0x4f, 0xe1, 0xe8, 0xff, 0xfd, 0xf1, 0x7e, 0x1e, 0xd0, 0x9b, 0xd9, 0xed, 0x8c, 0x4e,
	0x7a, 0xc9, 0x72, 0xc7, 0xac, 0xbf, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x97, 0xfb, 0x55, 0xd6,
	0xad, 0x01, 0x00, 0x00,
}
